class Solution {
public:
    int f(int i, int j,string s1, string s2){
        if(i==0) return j;
        if(j==0) return i;

        if(s1[i]==s2[j]){
            return f(i-1,j-1,s1,s2);
        }else{
            int d1=1+f(i-1,j,s1,s2);
            int d2=1+f(i,j-1,s1,s2);
            return min(d1,d2);
        }
       
    }
    int minDistance(string s1, string s2) {
        int n=s1.size();
        int m=s2.size();

        vector<int> pre(m+1,0) ;


        for(int i=1;i<=n;i++){
            vector<int> cur(m+1,0);
            for(int j=1;j<=m;j++){
                if(s1[i-1]==s2[j-1]){
                    cur[j]= 1+pre[j-1];
                }else{
                    cur[j]= max(cur[j-1],pre[j]);
                }
            }
            pre=cur;
        }
        return n+m-2*pre[m];
    }
};
